import codecs

private_half = "0956CC0D662437B55F3592A681D8A6BDC19842D7CA22B599ACFC35D984568B3FEAC1FA1024315718FB9D7A098974830207E25064E9882CB6E3A3B479EBA29CADD192996AB7EB7747DE6260DFCEDC9A8451455540791A5DA75DBD34ACC2C00BD564860CBE657ABD4243D183608D2B74005EA3EDF32BB440919AE331D34FD28BFD"
public_key_64 = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvwT3AJAhwqOhahw3aAhGb3zVODTX1Np/vjYdcB0VrywQuu1ibi/+YPsm+Yfn124uv1o5Pz2bjdEj4uq1F5kFh1UUgT2xTp/7Z5fHVIcLuI6OQWf10jfyqmWdCLItQs09RaCpq4lZphkwdeP3zur/BWWwAWD2beUrdPandWWgpGcavgaf0yS2qK2cl6hdiaP8iboIknOs/IrE2c5qO1e0XQtjIO9NnsyDuhwXzTqvuZF6NWPHMY3N+uitPoqSr6hpXh8zeVTIDK03G0PgfpUIJlcD6I4IpY2VHd0kc0LLNT0fIqazk4e05ZDELJHNrHzIPrI8TZDSXS1CBVig8/1R6QIDAQAB"


enc = "4D0CCFA78DDC1BCFB4F88D780FA8A654A1ECF4FD8E6C7B855EA5E65162928CB672B332D2C8B89B8C1A56250C344EC13070CA5275018764A5CE1F9B89C45E6A4468C01618298CF89EE7B5E45CAAF3BD7183B311966336FB1AEB58C8319B365F5B9041CEE502E957CC7DB40C1F5FF59D5B29DA080A9312A80AA1FCB904D22DD0C9F12910A0E5755DC075ADBDA898215210D88422FBD9D0E851F3FDC029F70177140162700215F8CEFC58872ED72198A52447DEF6E23C55D6D9C4EA11DCD14BC59B01ABF9192F1977C2CCBAC31ECF0B03194D4FF489432D9997E2E07EB99F475DEE6AC0F8F5632B4414D4372156BBE621AC2BE00C8C179B57B4C84B9F12061B7D02"


public_key = codecs.decode(public_key_64.encode(),'base64')
private = codecs.decode(private_half.encode(),'base64')
enc = codecs.decode(enc.encode(),'base64')
#print(public_key,private,enc)

pub = int.from_bytes(public_key, byteorder='big', signed=False)
priv = int.from_bytes(private, byteorder='big', signed=False)
de = pub * priv
n= 1020 #??temp value for now, but this should be part of the public key?

print(de)
for k in range(500,600):
	phi = (de  - 1)//k
	test = n - phi + 1 #test = p+q
	print(test)


#so priv * pub = phi * k + 1 for some k
#also it satisifies phi = n - p - q + 1
# p + q = n - phi + 1