Mr. A public key: [B' U', F B F, R' D, B D']
Mr. G public key: [R D L', D U' B, U F', L' F]

Mr. A sends: [B D' R' D R D L' D' R D B', B D' R' D D U' B D' R D B', B D' R' D U F' D' R D B', B D' R' D L' F D' R D B']
Mr. G sends: [U F' R D L' B' U' L D' R' F U', U F' R D L' F B F L D' R' F U', U F' R D L' R' D L D' R' F U', U F' R D L' B D' L D' R' F U']


https://en.wikipedia.org/wiki/Anshel%E2%80%93Anshel%E2%80%93Goldfeld_key_exchange


A_inv = B D' R' D
A = D' R D B'

B_inv = U F' R D L'
B = L D' R' F U'

key that Mr A calculates = A_inv * fold( mr_g send)

k1 = B D' R' D U F' R D L' B' U' L D' R' F U' U F' R D L' F B F L D' R' F U' U F' R D L' R' D L D' R' F U' U F' R D L' B D' L D' R' F U'

key that Mr G calculates = fold(mr_a send) * B
k2 = B D' R' D R D L' D' R D B' B D' R' D D U' B D' R D B' B D' R' D U F' D' R D B' B D' R' D L' F D' R D B' L D' R' F U'

commutator = A_inv * B_inv * A * B

 =   B D' R' D U F' R D L' D' R D B' L D' R' F U' <-- flag!!